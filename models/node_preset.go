// Code generated by go-swagger; DO NOT EDIT.

package models

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"github.com/go-openapi/errors"
	"github.com/go-openapi/strfmt"
	"github.com/go-openapi/swag"
	"github.com/go-openapi/validate"
)

// NodePreset node preset
//
// swagger:model node_preset
type NodePreset struct {

	// The display name of this preset
	// Required: true
	DisplayName *string `json:"display_name"`

	// The minimal amount of ephemeral storage in MiB in a node.
	// Required: true
	EphemeralStorage *int32 `json:"ephemeral_storage"`

	// The minimal amount of memory in MiB in a node.
	// Required: true
	Memory *int32 `json:"memory"`

	// The human readable name of this preset
	// Required: true
	Name *string `json:"name"`

	// The minimal number of VCPUs in a node.
	// Required: true
	Vcpus *int32 `json:"vcpus"`
}

// Validate validates this node preset
func (m *NodePreset) Validate(formats strfmt.Registry) error {
	var res []error

	if err := m.validateDisplayName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateEphemeralStorage(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateMemory(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateName(formats); err != nil {
		res = append(res, err)
	}

	if err := m.validateVcpus(formats); err != nil {
		res = append(res, err)
	}

	if len(res) > 0 {
		return errors.CompositeValidationError(res...)
	}
	return nil
}

func (m *NodePreset) validateDisplayName(formats strfmt.Registry) error {

	if err := validate.Required("display_name", "body", m.DisplayName); err != nil {
		return err
	}

	return nil
}

func (m *NodePreset) validateEphemeralStorage(formats strfmt.Registry) error {

	if err := validate.Required("ephemeral_storage", "body", m.EphemeralStorage); err != nil {
		return err
	}

	return nil
}

func (m *NodePreset) validateMemory(formats strfmt.Registry) error {

	if err := validate.Required("memory", "body", m.Memory); err != nil {
		return err
	}

	return nil
}

func (m *NodePreset) validateName(formats strfmt.Registry) error {

	if err := validate.Required("name", "body", m.Name); err != nil {
		return err
	}

	return nil
}

func (m *NodePreset) validateVcpus(formats strfmt.Registry) error {

	if err := validate.Required("vcpus", "body", m.Vcpus); err != nil {
		return err
	}

	return nil
}

// MarshalBinary interface implementation
func (m *NodePreset) MarshalBinary() ([]byte, error) {
	if m == nil {
		return nil, nil
	}
	return swag.WriteJSON(m)
}

// UnmarshalBinary interface implementation
func (m *NodePreset) UnmarshalBinary(b []byte) error {
	var res NodePreset
	if err := swag.ReadJSON(b, &res); err != nil {
		return err
	}
	*m = res
	return nil
}
