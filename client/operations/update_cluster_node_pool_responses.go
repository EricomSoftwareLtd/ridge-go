// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/EricomSoftwareLtd/ridge-go/models"
)

// UpdateClusterNodePoolReader is a Reader for the UpdateClusterNodePool structure.
type UpdateClusterNodePoolReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *UpdateClusterNodePoolReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewUpdateClusterNodePoolOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewUpdateClusterNodePoolBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewUpdateClusterNodePoolForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewUpdateClusterNodePoolNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewUpdateClusterNodePoolOK creates a UpdateClusterNodePoolOK with default headers values
func NewUpdateClusterNodePoolOK() *UpdateClusterNodePoolOK {
	return &UpdateClusterNodePoolOK{}
}

/*UpdateClusterNodePoolOK handles this case with default header values.

OK
*/
type UpdateClusterNodePoolOK struct {
	Payload *models.NodePool
}

func (o *UpdateClusterNodePoolOK) Error() string {
	return fmt.Sprintf("[PATCH /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}][%d] updateClusterNodePoolOK  %+v", 200, o.Payload)
}

func (o *UpdateClusterNodePoolOK) GetPayload() *models.NodePool {
	return o.Payload
}

func (o *UpdateClusterNodePoolOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodePool)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterNodePoolBadRequest creates a UpdateClusterNodePoolBadRequest with default headers values
func NewUpdateClusterNodePoolBadRequest() *UpdateClusterNodePoolBadRequest {
	return &UpdateClusterNodePoolBadRequest{}
}

/*UpdateClusterNodePoolBadRequest handles this case with default header values.

Invalid request parameters
*/
type UpdateClusterNodePoolBadRequest struct {
	Payload string
}

func (o *UpdateClusterNodePoolBadRequest) Error() string {
	return fmt.Sprintf("[PATCH /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}][%d] updateClusterNodePoolBadRequest  %+v", 400, o.Payload)
}

func (o *UpdateClusterNodePoolBadRequest) GetPayload() string {
	return o.Payload
}

func (o *UpdateClusterNodePoolBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterNodePoolForbidden creates a UpdateClusterNodePoolForbidden with default headers values
func NewUpdateClusterNodePoolForbidden() *UpdateClusterNodePoolForbidden {
	return &UpdateClusterNodePoolForbidden{}
}

/*UpdateClusterNodePoolForbidden handles this case with default header values.

Forbidden
*/
type UpdateClusterNodePoolForbidden struct {
	Payload string
}

func (o *UpdateClusterNodePoolForbidden) Error() string {
	return fmt.Sprintf("[PATCH /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}][%d] updateClusterNodePoolForbidden  %+v", 403, o.Payload)
}

func (o *UpdateClusterNodePoolForbidden) GetPayload() string {
	return o.Payload
}

func (o *UpdateClusterNodePoolForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewUpdateClusterNodePoolNotFound creates a UpdateClusterNodePoolNotFound with default headers values
func NewUpdateClusterNodePoolNotFound() *UpdateClusterNodePoolNotFound {
	return &UpdateClusterNodePoolNotFound{}
}

/*UpdateClusterNodePoolNotFound handles this case with default header values.

Resource not found
*/
type UpdateClusterNodePoolNotFound struct {
	Payload string
}

func (o *UpdateClusterNodePoolNotFound) Error() string {
	return fmt.Sprintf("[PATCH /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools/{node_pool}][%d] updateClusterNodePoolNotFound  %+v", 404, o.Payload)
}

func (o *UpdateClusterNodePoolNotFound) GetPayload() string {
	return o.Payload
}

func (o *UpdateClusterNodePoolNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
