// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/EricomSoftwareLtd/ridge-go/models"
)

// DescribeClusterTokenReader is a Reader for the DescribeClusterToken structure.
type DescribeClusterTokenReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *DescribeClusterTokenReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewDescribeClusterTokenOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewDescribeClusterTokenBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewDescribeClusterTokenForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewDescribeClusterTokenNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewDescribeClusterTokenOK creates a DescribeClusterTokenOK with default headers values
func NewDescribeClusterTokenOK() *DescribeClusterTokenOK {
	return &DescribeClusterTokenOK{}
}

/*DescribeClusterTokenOK handles this case with default header values.

OK
*/
type DescribeClusterTokenOK struct {
	Payload *models.Token
}

func (o *DescribeClusterTokenOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/tokens/{token}][%d] describeClusterTokenOK  %+v", 200, o.Payload)
}

func (o *DescribeClusterTokenOK) GetPayload() *models.Token {
	return o.Payload
}

func (o *DescribeClusterTokenOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Token)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeClusterTokenBadRequest creates a DescribeClusterTokenBadRequest with default headers values
func NewDescribeClusterTokenBadRequest() *DescribeClusterTokenBadRequest {
	return &DescribeClusterTokenBadRequest{}
}

/*DescribeClusterTokenBadRequest handles this case with default header values.

Invalid request parameters
*/
type DescribeClusterTokenBadRequest struct {
	Payload string
}

func (o *DescribeClusterTokenBadRequest) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/tokens/{token}][%d] describeClusterTokenBadRequest  %+v", 400, o.Payload)
}

func (o *DescribeClusterTokenBadRequest) GetPayload() string {
	return o.Payload
}

func (o *DescribeClusterTokenBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeClusterTokenForbidden creates a DescribeClusterTokenForbidden with default headers values
func NewDescribeClusterTokenForbidden() *DescribeClusterTokenForbidden {
	return &DescribeClusterTokenForbidden{}
}

/*DescribeClusterTokenForbidden handles this case with default header values.

Forbidden
*/
type DescribeClusterTokenForbidden struct {
	Payload string
}

func (o *DescribeClusterTokenForbidden) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/tokens/{token}][%d] describeClusterTokenForbidden  %+v", 403, o.Payload)
}

func (o *DescribeClusterTokenForbidden) GetPayload() string {
	return o.Payload
}

func (o *DescribeClusterTokenForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewDescribeClusterTokenNotFound creates a DescribeClusterTokenNotFound with default headers values
func NewDescribeClusterTokenNotFound() *DescribeClusterTokenNotFound {
	return &DescribeClusterTokenNotFound{}
}

/*DescribeClusterTokenNotFound handles this case with default header values.

Resource not found
*/
type DescribeClusterTokenNotFound struct {
	Payload string
}

func (o *DescribeClusterTokenNotFound) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/tokens/{token}][%d] describeClusterTokenNotFound  %+v", 404, o.Payload)
}

func (o *DescribeClusterTokenNotFound) GetPayload() string {
	return o.Payload
}

func (o *DescribeClusterTokenNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
