// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/EricomSoftwareLtd/ridge-go/models"
)

// ListClusterNodePoolsReader is a Reader for the ListClusterNodePools structure.
type ListClusterNodePoolsReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *ListClusterNodePoolsReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewListClusterNodePoolsOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewListClusterNodePoolsBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewListClusterNodePoolsForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewListClusterNodePoolsNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewListClusterNodePoolsOK creates a ListClusterNodePoolsOK with default headers values
func NewListClusterNodePoolsOK() *ListClusterNodePoolsOK {
	return &ListClusterNodePoolsOK{}
}

/*ListClusterNodePoolsOK handles this case with default header values.

Success
*/
type ListClusterNodePoolsOK struct {
	Payload *models.NodePools
}

func (o *ListClusterNodePoolsOK) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools][%d] listClusterNodePoolsOK  %+v", 200, o.Payload)
}

func (o *ListClusterNodePoolsOK) GetPayload() *models.NodePools {
	return o.Payload
}

func (o *ListClusterNodePoolsOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.NodePools)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClusterNodePoolsBadRequest creates a ListClusterNodePoolsBadRequest with default headers values
func NewListClusterNodePoolsBadRequest() *ListClusterNodePoolsBadRequest {
	return &ListClusterNodePoolsBadRequest{}
}

/*ListClusterNodePoolsBadRequest handles this case with default header values.

Invalid request parameters
*/
type ListClusterNodePoolsBadRequest struct {
	Payload string
}

func (o *ListClusterNodePoolsBadRequest) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools][%d] listClusterNodePoolsBadRequest  %+v", 400, o.Payload)
}

func (o *ListClusterNodePoolsBadRequest) GetPayload() string {
	return o.Payload
}

func (o *ListClusterNodePoolsBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClusterNodePoolsForbidden creates a ListClusterNodePoolsForbidden with default headers values
func NewListClusterNodePoolsForbidden() *ListClusterNodePoolsForbidden {
	return &ListClusterNodePoolsForbidden{}
}

/*ListClusterNodePoolsForbidden handles this case with default header values.

Forbidden
*/
type ListClusterNodePoolsForbidden struct {
	Payload string
}

func (o *ListClusterNodePoolsForbidden) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools][%d] listClusterNodePoolsForbidden  %+v", 403, o.Payload)
}

func (o *ListClusterNodePoolsForbidden) GetPayload() string {
	return o.Payload
}

func (o *ListClusterNodePoolsForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewListClusterNodePoolsNotFound creates a ListClusterNodePoolsNotFound with default headers values
func NewListClusterNodePoolsNotFound() *ListClusterNodePoolsNotFound {
	return &ListClusterNodePoolsNotFound{}
}

/*ListClusterNodePoolsNotFound handles this case with default header values.

Resource not found
*/
type ListClusterNodePoolsNotFound struct {
	Payload string
}

func (o *ListClusterNodePoolsNotFound) Error() string {
	return fmt.Sprintf("[GET /orgs/{org}/projects/{project}/clusters/{cluster}/node-pools][%d] listClusterNodePoolsNotFound  %+v", 404, o.Payload)
}

func (o *ListClusterNodePoolsNotFound) GetPayload() string {
	return o.Payload
}

func (o *ListClusterNodePoolsNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
