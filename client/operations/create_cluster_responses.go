// Code generated by go-swagger; DO NOT EDIT.

package operations

// This file was generated by the swagger tool.
// Editing this file might prove futile when you re-run the swagger generate command

import (
	"fmt"
	"io"

	"github.com/go-openapi/runtime"
	"github.com/go-openapi/strfmt"

	"github.com/EricomSoftwareLtd/ridge-go/models"
)

// CreateClusterReader is a Reader for the CreateCluster structure.
type CreateClusterReader struct {
	formats strfmt.Registry
}

// ReadResponse reads a server response into the received o.
func (o *CreateClusterReader) ReadResponse(response runtime.ClientResponse, consumer runtime.Consumer) (interface{}, error) {
	switch response.Code() {
	case 200:
		result := NewCreateClusterOK()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return result, nil
	case 400:
		result := NewCreateClusterBadRequest()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 403:
		result := NewCreateClusterForbidden()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result
	case 404:
		result := NewCreateClusterNotFound()
		if err := result.readResponse(response, consumer, o.formats); err != nil {
			return nil, err
		}
		return nil, result

	default:
		return nil, runtime.NewAPIError("response status code does not match any response statuses defined for this endpoint in the swagger spec", response, response.Code())
	}
}

// NewCreateClusterOK creates a CreateClusterOK with default headers values
func NewCreateClusterOK() *CreateClusterOK {
	return &CreateClusterOK{}
}

/*CreateClusterOK handles this case with default header values.

OK
*/
type CreateClusterOK struct {
	Payload *models.Cluster
}

func (o *CreateClusterOK) Error() string {
	return fmt.Sprintf("[POST /orgs/{org}/projects/{project}/clusters][%d] createClusterOK  %+v", 200, o.Payload)
}

func (o *CreateClusterOK) GetPayload() *models.Cluster {
	return o.Payload
}

func (o *CreateClusterOK) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	o.Payload = new(models.Cluster)

	// response payload
	if err := consumer.Consume(response.Body(), o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterBadRequest creates a CreateClusterBadRequest with default headers values
func NewCreateClusterBadRequest() *CreateClusterBadRequest {
	return &CreateClusterBadRequest{}
}

/*CreateClusterBadRequest handles this case with default header values.

Bad request parameter
*/
type CreateClusterBadRequest struct {
	Payload string
}

func (o *CreateClusterBadRequest) Error() string {
	return fmt.Sprintf("[POST /orgs/{org}/projects/{project}/clusters][%d] createClusterBadRequest  %+v", 400, o.Payload)
}

func (o *CreateClusterBadRequest) GetPayload() string {
	return o.Payload
}

func (o *CreateClusterBadRequest) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterForbidden creates a CreateClusterForbidden with default headers values
func NewCreateClusterForbidden() *CreateClusterForbidden {
	return &CreateClusterForbidden{}
}

/*CreateClusterForbidden handles this case with default header values.

Forbidden
*/
type CreateClusterForbidden struct {
	Payload string
}

func (o *CreateClusterForbidden) Error() string {
	return fmt.Sprintf("[POST /orgs/{org}/projects/{project}/clusters][%d] createClusterForbidden  %+v", 403, o.Payload)
}

func (o *CreateClusterForbidden) GetPayload() string {
	return o.Payload
}

func (o *CreateClusterForbidden) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}

// NewCreateClusterNotFound creates a CreateClusterNotFound with default headers values
func NewCreateClusterNotFound() *CreateClusterNotFound {
	return &CreateClusterNotFound{}
}

/*CreateClusterNotFound handles this case with default header values.

Resource not found
*/
type CreateClusterNotFound struct {
	Payload string
}

func (o *CreateClusterNotFound) Error() string {
	return fmt.Sprintf("[POST /orgs/{org}/projects/{project}/clusters][%d] createClusterNotFound  %+v", 404, o.Payload)
}

func (o *CreateClusterNotFound) GetPayload() string {
	return o.Payload
}

func (o *CreateClusterNotFound) readResponse(response runtime.ClientResponse, consumer runtime.Consumer, formats strfmt.Registry) error {

	// response payload
	if err := consumer.Consume(response.Body(), &o.Payload); err != nil && err != io.EOF {
		return err
	}

	return nil
}
